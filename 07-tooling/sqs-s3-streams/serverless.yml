service: tooling-s3-sqs
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name



provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, "dev"}
  environment:
    BUCKET_NAME: arquivos-augusto-001
    SQS_QUEUE: file-handler
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:GetQueueUrl
        - sqs:CreateQueue
        - sqs:ReceiveMessage
      Resource: ${self:custom.sqsArn}
    - Effect: Allow
      Action:
        - s3:*
      Resource: 
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}

plugins:
  - serverless-localstack
  - serverless-offline

custom:
  sqsArn:
    Fn::GetAtt:
      - SQSQueue
      - Arn

  localstack:
    stages:
      - local
    #desabilitar quando fizer o deploy
    autostart: false
  serverless-offline:
    useChildProcesses: true

package:
  individually: true
  excludeDevDependencies: true

functions:
  s3listener:
    handler: src/.s3listener
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv

  sqslistener:
    handler: src/.sqslistener
    events:
      - sqs:
          batchSize: 1
          arn: ${self:custom.sqsArn}

resources:
  Resource:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.SQS_QUEUE}
        VisibilityTimeout: 60

